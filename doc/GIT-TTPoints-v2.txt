GIT-TTPoints:
This are just some random notes used to write an eventual document

*** Definitions:
	- rootDir:  the parent of our various appRootDir's.  The appRootDirs are:
		PMSOWPoints - manage PMS open water points
		PMSTopTen - manage PMS AGSOTY (that's what this writeup is concentrating on)
		PMSPerlModules - helper Perl modules used by the two above projects.
	- appRootDir: the PMSTopTen directory, the parent of which is rootDir
	- yearToProcess: the season to process, e.g. 2017
	
*** Begin a new season:  (leave old season in place so we can compute points for 
	both seasons.  See "Remove an old season" below when we no longer need to compute
	points for the old season.)
	- Create our new season-specific Source directory:
		% cd <appRootDir>/SeasonData
		- Copy the latest Season-<old season> directory
		- Paste to "Season-<new season>"
		(at this point we have at least two Season directories:  Season-<old season> and
		 Season-<new season>.  For example, Season-2016/ and Season-2017/)
		- cd to "Season-<new season>"
		- remove SourceData-<old season>  (remember, this is still in the Season-<old season> directory)
		- create the SourceData-<new season> directory
		- cd PMSSwimmerData
		- remove all old RSIDN files and get a new one (or use an old one for now)
		- cd ..   (cwd=Season-<new season>)

		- rename the "properties-<old season>.txt" to "properties-<new season>.txt"
		- rename the "properties_DB-<old season>.txt" to "properties_DB-<new season>.txt"
		- edit "properties-<new season>.txt" and make necessary changes, e.g.:
			- comment line with name of file
		- edit "properties_DB-<new season>.txt" and make necessary changes, e.g.:
			(Some installations will require a different
			MySQL user name and/or password for each new database.  In addition, some 
			installations will not allow a simple database name like "TopTen_2017" so the
			below "Initialize our database" instructions will have to be modified, requiring 
			a modification of the 'properties_DB-{new season}.txt' property file.)
			- change the name of the new season's database (see Initialize our database below.)
			- change the Username and password of the MySQL user for this new database (if 
				necessary)
			
	- Initialize our database:
	  (NOTE:  this is platform-dependent, so you may have to adjust depending on your
	   installation.  These instructions assume a simple MySQL platform.)
		- mysql -u root -p<MySql root password>   
			- CREATE DATABASE TopTen_<new season>;  # (DB name may be platform-dependent)
			- GRANT ALL ON TopTen_<new season>.* TO DBTopTen IDENTIFIED BY 'TopTen';
				(grant all privileges on db (all tables) to Username identified by password.
				Note that Username and password may be platform-dependent)
			- quit
	
	- use GetResults.pl to make sure we get the expected results in 
		the directories:
			<appRootDir>/SeasonData/Season-<new season>
			<appRootDir>/GeneratedFiles/Generated-<new season>
		- from Eclipse:  Run GetResults.pl with the parameter <new season>, or
		- from Terminal: <appRootDir>/Code/Scripts/FetchTopten <new season>
		
	- Add a link to the Support directory to the Generated-<new season> directory:
		- copy the Support directory alias from Generated-<old season> 
			to Generated-<new season>, e.g.:
				% cd Generated-<old season>
				% cp -a Support Generated-<new season>
		- on PMS dev:  see "Begin a new season on PMS Dev" below
		- on PMS Prod:  see "Begin a new season on PMS Prod" below
				
	- use Topten2.pl to process the fetched files and make sure we get the expected results
		in the <appRootDir>/SeasonData/Season-<new season> directory:
		- from Eclipse:  Run Topten2.pl with the parameter <new season>, or
		- from Terminal: <appRootDir>/Code/Scripts/GenTopten2 <new season>
	
	- Clean up:
		- Remove all the files in the <appRootDir>/GeneratedFiles/Generated-<new season>
			directory EXCEPT the Support symbolic link.
		- Remove all the files in the 
			<appRootDir>/SeasonData/Season-<new season>/SourceData-<new season>/ 
			directory.  This is where the new seasons Top Ten results will be placed.
		
???	- Refresh your Eclipse project.

=========================================================================================
*** Begin a new season on PMS Dev:
	ON DEV MACHINE (www1.g13.pair.com):
	- Add a link to the Support directory to the Generated-<new season> directory:
		- copy the Support directory alias from Generated-<old season> 
			to Generated-<new season>, e.g.:
				% cd /usr/home/caroline/public_html/pacific-masters.org/sites/default/files/
					comp/points/standings-<old season>
				% cp -a Support /usr/home/caroline/public_html/pacific-masters.org/sites/default/
					files/comp/points/standings-<new season>
	- Update the "Swimmer of the Year Awards" page:
		(https://pacific-masters.org/content/laura-val-swimmer-year-awards)
		This page will show a link to the AGSOTY page for the "Current Year" and the
		"Previous Year".  It switches years when the date changes years (Dec 31 at midnight.)
		So there is nothing to do UNLESS you want to show other years, in which case do this:
		- drupal log in (https://pacific-masters.org/user)
		- Competition > Swimmer of the Year Awards
		- Edit the php:
			Make sure the text format is "PHP code" and "Disable rich-text" is off.
			The first few lines grab the data from the PacM database, then the output starts. 
			You have to scroll down a bit to find that.  Find this:
  				$year = date('Y');
			and change it to:
  				$year = 2017;  # in this example <new season> is 2017
	- Update the crontab for the dev user:
		- copy the entry for the <old season> and convert it for the <new season>

		
	
	
*** Begin a new season on PMS Prod:
	ON PRODUCTION MACHINE:
	- Add a link to the Support directory to the Generated-<new season> directory:
		- copy the Support directory alias from Generated-<old season> 
			to Generated-<new season>, e.g.:
				% cd /usr/home/pacmasters/public_html/pacificmasters.org/sites/default/files/
					comp/points/standings-<old season>
				% cp -a Support /usr/home/pacmasters/public_html/pacificmasters.org/sites/default/
					files/comp/points/standings-<new season>




*** Remove an old season:

=========================================================================================
*** move a season <yearToProcess> into Historical
cd <appRootDir>/Historical
mkdir <yearToProcess>
mv ../GeneratedFiles/Generated-<yearToProcess>  <yearToProcess>
mv ../SeasonData/Season-<yearToProcess>  <yearToProcess>





=========================================================================================
******  Update remote (master) repository using local repository

- first get list of new and changed files on local repository
% cd <appRootDir>
--- do one of these:
1)
	% git status
		(review list of files and make sure you want them all...)
	% git add -n -A
		(review list of additions and deletions.)
		(	git diff <file>   ---- difference between <file> in local repo and remote repository.

	% git add -A
	% git commit -a
	% git push
OR
2)
	% git status
	--- get list of files that are tracked and:
		modified
		deleted
		% git add <file> for files we want to commit
		% git rm <file> for files we want to delete
		% git checkout -- <file> to discard changed files
	--- Untracked files:
		% git add <file> for files we want to commit



=========================================================================================
******* Update local repository from the remote (master) repository
% cd <appRootDir>
% git pull


=========================================================================================

****** Create a local repository from the PMSTopTen remote repository
(do this on any client...mac or pc or linux box)

# First, we must have the latest PMSPerlModules.  Get them here:
% cd $rootDir			# see Definition of 'rootDir'.  Create if necessary
% git clone https://github.com/bobup/PMSPerlModules

# Next, we need to get the files that contain privileged information:
#	- RSIND files
#	- database config files
# Put them somewhere safe so they will be available when we need them a few steps below.

# Next, we get the latest PMSTopTen files:
% rm -rf PMSTopTen   # if it exists.  You can also move it.
# Create a brand new PMSTopTen directory:
% git clone https://github.com/bobup/PMSTopTen

# Next, install the privileged files we gathered above:
#	- put the properties_DB-{season}.txt file into the <appRootDir>/SeasonData/Season-<season> 
#		directory
#	- put the correct RSIND file into the <appRootDir>/SeasonData/Season-<season>/PMSSwimmerData
#		directory.
#	- chmod go-rwx properties_DB-{season}.txt 
#	- chmod go-rwx <appRootDir>/SeasonData/Season-<season>/PMSSwimmerData/*RSIND*
#	- chmod go-rwx <appRootDir>/SeasonData/Season-<season>/PMSSwimmerData
# DO THE ABOVE FOR ALL seasons

# Next, we need to be sure our database configuration parameters are set
# correctly.  They are specified in the 'properties_DB-{season}.txt' file located in the
# <appRootDir>/SeasonData/Season-<season> directory.  The checked in version
# has default values for the database host, database name, database user, 
# and database password.  These need to be modified if necessary.  Don't 
# bother checking in the modified properties_DB-{season}.txt file since it will contain
# information that should not be available to the rest of the world.   
---- DO ONE OF THESE:
--- 1)
% cd <appRootDir>/SeasonData/Season-<season>
% vi properties_DB-{season}.txt
--- remove everything from 
	# database connection...
--- up to BUT NOT INCLUDING
	>include
--- insert correct chunk from ~/Automation/properties-YEAR.txt.  For example, for the
--- 2017 year the correct chunk is:
#### WARNING - CHANGED FOR USE ON PAC DEV SERVER FOR THE 2017 SEASON
# database connection parameters for 2017
# Modified for use on PMS server
dbHost  db89a.pair.com
dbName  caroline_TT2017
dbUser  caroline_5
dbPass  DwBNLDSN

--- OR ----
xxx2)    ----- for 2018
xxx% cd PMSTopTen/Code
xxx % cp ../../TT2018/properties.txt .


****  need to add steps to get and maintain our RSIND files!  (We can't store them on github)
...something like this:
cd <appRootDir>/SeasonData/Season-<season>
mkdir PMSSwimmerData
cd PMSSwimmerData
...get the RSIND file and put it here...
... do the same for the 


# At this point we have the source code but no "Generated Files", so we'll have 
# to generate some.  In the 'SeasonData' directory there should be one or more 
# source directories named "Season-yyyy' where 'yyyy' is some year.  Here's how we'll
# generate some results assuming we have data for 2017.  Plug in whatever year for which
# you have data.
# Next, set up your MySql server.  The following discussion assumes the default
# configuration define in the properties_DB-{season}.txt file described above.
# You need to install MySql and create a root account
# with all permissions.  Then do the following (you may have to change names/passwords
# to match the code - see the call to PMS_MySqlSupport::SetSqlParameters() in the file
# PMSTopTen/Code/Topten2.pl to see what the code uses.)
% mysql -u root -p
<supply root password for your MySql server>
> show databases;
# if you have a database named "TopTen_2017" (where '2017' is the year in this example)
# then you're done.  Or you can drop it like this:
> DROP DATABASE TopTen_2017;
# to create the database do this:
> CREATE DATABASE TopTen_2017;
# then you need to db user who has access to this new database.  See code to confirm
# the name and password.  First see if the DBTopTen user exists:
> select * from mysql.user;
# if not then create the user:
> CREATE USER DBTopTen IDENTIFIED BY 'TopTen';
# then give this user permissions on our TopTen table:
> GRANT ALL ON TopTen_2017.* TO DBTopTen IDENTIFIED BY 'TopTen';
> exit

# Now we're ready to process the source data that we got from Git and create the
# various result files:
% cd PMSTopTen		# Remember: you are now in $rootDir/PMSTopTen
# You may want to change the 'EMAIL_NOTICE' variable in the GenTopten2 script used
# next so it will send an email to the correct person.  Then execute the script:
    ----   no!   % Code/Scripts/GenTopten2 2017
% Code/Scripts/DoFetchAndProcessTopten 2017





=========================================================================================

How to update RSIDN file so next run will use it.

- get new RSIDN file from admin
- put into $appRootDir/SeasonData/Season-$yearToProcess/PMSSwimmerData/.
	- remove the old one if you want.
- OBSOLETE:  edit $appRootDir/SeasonData/Season-$yearToProcess/properties-$yearToProcess.txt
	- change the value of the macro named 'RSIDNFileName' to the new RSIDN (simple)
		file name.
  INSTEAD:  the code will use the most recent version it can find in the PMSSwimmerData/
  	directory, so just put it there and you're done.
